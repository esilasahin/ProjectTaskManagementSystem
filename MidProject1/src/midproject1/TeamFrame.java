/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package midproject1;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author asus
 */
public class TeamFrame extends javax.swing.JFrame {

    // DefaultListModel used to populate the team list
    DefaultListModel teamListModel = new DefaultListModel();
    // DefaultListModel used to populate the project list
    private DefaultListModel<String> projectListModel = new DefaultListModel<>();

    /**
     * Creates new form TeamFrame
     */
    public TeamFrame() {
        initComponents();
        loadTeamListFromManager(); // Load the list of teams
        loadProjectListFromManager(); // Load the list of projects
        loadAssignmentsToArea(); // Display any existing assignments
        teamList.setModel(teamListModel); // Set the team list model
        projectList.setModel(projectListModel); // Set the project list model
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCreateTeam = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTeamName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        teamList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        projectList = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        btnProjectToTeam = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        assignmentArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCreateTeam.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCreateTeam.setText("Create team");
        btnCreateTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateTeamActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Enter a team name:");

        jScrollPane1.setViewportView(teamList);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Team List");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setText("Team Management System");

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(projectList);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Project List");

        btnProjectToTeam.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnProjectToTeam.setText("Assign the project to the team");
        btnProjectToTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProjectToTeamActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Select team and project from lists");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Assignments");

        assignmentArea.setColumns(20);
        assignmentArea.setRows(5);
        jScrollPane4.setViewportView(assignmentArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(350, 350, 350)
                            .addComponent(btnBack)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(6, 6, 6)
                                .addComponent(txtTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCreateTeam))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnProjectToTeam))))
                .addGap(53, 73, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(91, 91, 91))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1))
                    .addComponent(txtTeamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateTeam))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel6)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane4))
                .addGap(17, 17, 17)
                .addComponent(jLabel5)
                .addGap(14, 14, 14)
                .addComponent(btnProjectToTeam)
                .addGap(21, 21, 21)
                .addComponent(btnBack)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Loads the list of team names from the TeamManager.
     * Updates the team list model with the retrieved team names.
     */
    private void loadTeamListFromManager() {
        teamListModel.clear(); // Clears the existing list
        ArrayList<String> teamNames = Team.getAllTeamNames(); // Get all team names
        for (String name : teamNames) { 
            teamListModel.addElement(name); // Add each team name to the list model
        }
        teamList.setModel(teamListModel); // Update the list with the model
    }

    /**
     * Loads the list of project names from the ProjectManager.
     * Updates the project list model with the retrieved project names.
     */
    private void loadProjectListFromManager() {
        projectListModel.clear(); // Clears the existing list
        ArrayList<String> projectNames = ProjectManager.getAllProjectNames(); // Get all project names
        for (String name : projectNames) {
            projectListModel.addElement(name); // Add each project name to the list model
        }
        projectList.setModel(projectListModel); // Update the list with the model
    }

    /**
     * Loads existing assignments and displays them in the assignment area.
     */
    private void loadAssignmentsToArea() {
        assignmentArea.setText(""); // Clears the assignment area before displaying new data
        for (Assignment a : ProjectManager.getAssignments()) {
            assignmentArea.append("Team '" + a.getTeamName() + "' -> Project '" + a.getProjectName() + "'\n");
        }
    }

/**
     * Handles the action when the "Create team" button is clicked.
     * Creates a new team if the entered name is valid.
     */
    private void btnCreateTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateTeamActionPerformed
        // TODO add your handling code here:
        String teamName = txtTeamName.getText().trim(); // Get the team name entered by the user
        if (teamName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a team name."); // Show an error message if the name is empty
            return;
        }

        // Check if the team already exists
        if (teamListModel.contains(teamName)) {
            JOptionPane.showMessageDialog(this, "This team already exists."); // Show an error message if the team already exists
            return;
        }

        teamListModel.addElement(teamName); // Add the new team to the list model
        Team.addTeam(teamName); // Add the new team to the team manager
        txtTeamName.setText(""); // Clear the text field

    }//GEN-LAST:event_btnCreateTeamActionPerformed

    /**
     * Handles the action when the "Assign the project to the team" button is clicked.
     * Assigns the selected project to the selected team, ensuring that the project is not already assigned.
     */
    private void btnProjectToTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProjectToTeamActionPerformed
        // TODO add your handling code here:
        String selectedTeam = teamList.getSelectedValue(); // Get the selected team
        String selectedProject = projectList.getSelectedValue(); // Get the selected project

        if (selectedTeam == null || selectedProject == null) {
            JOptionPane.showMessageDialog(this, "Please select both a team and a project."); // Show an error message if no selection is made
            return;
        }

        // Check if the project is already assigned to the selected team
        for (Assignment a : ProjectManager.getAssignments()) {
            if (a.getTeamName().equals(selectedTeam) && a.getProjectName().equals(selectedProject)) {
                JOptionPane.showMessageDialog(this, "This project is already assigned to this team.");
                return;
            }
        }

        // Check if the project is already assigned to another team
        for (Assignment a : ProjectManager.getAssignments()) {
            if (a.getTeamName().equals(selectedTeam) || a.getProjectName().equals(selectedProject)) {
                JOptionPane.showMessageDialog(this, "This project is already assigned to a team.");
                return;
            }
        }

        // Assign the project to the team
        Assignment newAssignment = new Assignment(selectedTeam, selectedProject);
        ProjectManager.addAssignment(newAssignment); // Add the assignment to the manager

        // Show a success message
        JOptionPane.showMessageDialog(this, "Project '" + selectedProject + "' assigned to team '" + selectedTeam + "'.");

        // Display the new assignment
        assignmentArea.append("Team '" + selectedTeam + "' -> Project '" + selectedProject + "'\n");

        // Remove the assigned team and project from the lists
        teamListModel.removeElement(selectedTeam);
        projectListModel.removeElement(selectedProject);
    }//GEN-LAST:event_btnProjectToTeamActionPerformed

     /**
     * Handles the action when the "Back" button is clicked.
     * Navigates back to the Admin Panel.
     */
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        AdminPanel adminPanel = new AdminPanel(); // Create a new Admin Panel instance
        adminPanel.setVisible(true); // Make the Admin Panel visible
        setVisible(false); // Hide the current TeamFrame
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeamFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeamFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea assignmentArea;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateTeam;
    private javax.swing.JButton btnProjectToTeam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> projectList;
    private javax.swing.JList<String> teamList;
    private javax.swing.JTextField txtTeamName;
    // End of variables declaration//GEN-END:variables
}
